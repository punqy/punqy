<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <style>
        body {
            background: #efefef;
        }

        pre {
            background-color: ghostwhite;
            border: 1px solid silver;
            padding: 10px 20px;
            border-radius: 4px;
            width: 75%;
            margin: 20px auto;
        }
    </style>
</head>
<body>
<pre><code id="profile"></code></pre>
<script>
    /**
     * Pretty Print JSON Objects.
     * Inspired by http://jsfiddle.net/unLSJ/
     *
     * @return {string}    html string of the formatted JS object
     * @example:  var obj = {"foo":"bar"};  obj.prettyPrint();
     */
    Object.prototype.prettyPrint = function () {
        var jsonLine = /^( *)("[\w]+": )?("[^"]*"|[\w.+-]*)?([,[{])?$/mg;
        var replacer = function (match, pIndent, pKey, pVal, pEnd) {
            var key = '<span class="json-key" style="color: brown">',
                val = '<span class="json-value" style="color: navy">',
                str = '<span class="json-string" style="color: olive">',
                r = pIndent || '';
            if (pKey)
                r = r + key + pKey.replace(/[": ]/g, '') + '</span>: ';
            if (pVal)
                r = r + (pVal[0] == '"' ? str : val) + pVal + '</span>';
            return r + (pEnd || '');
        };

        return JSON.stringify(this, null, 3)
            .replace(/&/g, '&amp;').replace(/\\"/g, '&quot;')
            .replace(/</g, '&lt;').replace(/>/g, '&gt;')
            .replace(jsonLine, replacer);
    }


    const profile = JSON.parse('{{ to_json .}}');

    document.getElementById('profile').innerHTML = profile.prettyPrint();

</script>
</body>
</html>
